//
//  BTCSceneRouter.swift
//  Test
//
//  Created by Ratchapol Pattarakanoksiri on 17/5/2566 BE.
//  Copyright (c) 2566 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol BTCSceneRoutingLogic {
    func routeToCalculateUSD(segue: UIStoryboardSegue?)
    func routeToCalculateGBP(segue: UIStoryboardSegue?)
    func routeToCalculateEUR(segue: UIStoryboardSegue?)
    func routeToHistoryUSD(segue: UIStoryboardSegue?)
    func routeToHistoryGBP(segue: UIStoryboardSegue?)
    func routeToHistoryEUR(segue: UIStoryboardSegue?)
}

protocol BTCSceneDataPassing {
    var dataStore: BTCSceneDataStore? { get }
}

class BTCSceneRouter: NSObject, BTCSceneRoutingLogic, BTCSceneDataPassing {
    weak var viewController: BTCSceneViewController?
    var dataStore: BTCSceneDataStore?
    
    // MARK: Routing
    
    func routeToCalculateUSD(segue: UIStoryboardSegue?) {
        if let segue = segue {
            let destinationVC = segue.destination as! CalculateViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToCalculateUSD(source: dataStore!, destination: &destinationDS)
        }
    }
    
    func routeToCalculateGBP(segue: UIStoryboardSegue?) {
        if let segue = segue {
            let destinationVC = segue.destination as! CalculateViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToCalculateGBP(source: dataStore!, destination: &destinationDS)
        }
    }
    
    func routeToCalculateEUR(segue: UIStoryboardSegue?) {
        if let segue = segue {
            let destinationVC = segue.destination as! CalculateViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToCalculateEUR(source: dataStore!, destination: &destinationDS)
        }
    }
    
    func routeToHistoryUSD(segue: UIStoryboardSegue?) {
        if let segue = segue {
            let destinationVC = segue.destination as! HistoryViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToHistoryUSD(source: dataStore!, destination: &destinationDS)
        }
    }
    
    func routeToHistoryGBP(segue: UIStoryboardSegue?) {
        if let segue = segue {
            let destinationVC = segue.destination as! HistoryViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToHistoryGBP(source: dataStore!, destination: &destinationDS)
        }
    }
    
    func routeToHistoryEUR(segue: UIStoryboardSegue?) {
        if let segue = segue {
            let destinationVC = segue.destination as! HistoryViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToHistoryEUR(source: dataStore!, destination: &destinationDS)
        }
    }
    
    // MARK: Passing data
    
    func passDataToCalculateUSD(source: BTCSceneDataStore, destination: inout CalculateDataStore) {
        destination.code = source.BTCRateList.last?.bpi?.usd?.code
        destination.rate = source.BTCRateList.last?.bpi?.usd?.rateFloat
    }
    
    func passDataToCalculateGBP(source: BTCSceneDataStore, destination: inout CalculateDataStore) {
        destination.code = source.BTCRateList.last?.bpi?.gbp?.code
        destination.rate = source.BTCRateList.last?.bpi?.gbp?.rateFloat
    }
    
    func passDataToCalculateEUR(source: BTCSceneDataStore, destination: inout CalculateDataStore) {
        destination.code = source.BTCRateList.last?.bpi?.eur?.code
        destination.rate = source.BTCRateList.last?.bpi?.eur?.rateFloat
    }
    
    func passDataToHistoryUSD(source: BTCSceneDataStore, destination: inout HistoryDataStore) {
        destination.btcHistoryList = source.getBTCHistory(currencyEnum: .usd)
    }
    
    func passDataToHistoryGBP(source: BTCSceneDataStore, destination: inout HistoryDataStore) {
        destination.btcHistoryList = source.getBTCHistory(currencyEnum: .gbp)
    }
    
    func passDataToHistoryEUR(source: BTCSceneDataStore, destination: inout HistoryDataStore) {
        destination.btcHistoryList = source.getBTCHistory(currencyEnum: .eur)
    }
}
